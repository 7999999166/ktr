parcelRequire=function(e,r,t,n){var i,o="function"==typeof parcelRequire&&parcelRequire,u="function"==typeof require&&require;function f(t,n){if(!r[t]){if(!e[t]){var i="function"==typeof parcelRequire&&parcelRequire;if(!n&&i)return i(t,!0);if(o)return o(t,!0);if(u&&"string"==typeof t)return u(t);var c=new Error("Cannot find module '"+t+"'");throw c.code="MODULE_NOT_FOUND",c}p.resolve=function(r){return e[t][1][r]||r},p.cache={};var l=r[t]=new f.Module(t);e[t][0].call(l.exports,p,l,l.exports,this)}return r[t].exports;function p(e){return f(p.resolve(e))}}f.isParcelRequire=!0,f.Module=function(e){this.id=e,this.bundle=f,this.exports={}},f.modules=e,f.cache=r,f.parent=o,f.register=function(r,t){e[r]=[function(e,r){r.exports=t},{}]};for(var c=0;c<t.length;c++)try{f(t[c])}catch(e){i||(i=e)}if(t.length){var l=f(t[t.length-1]);"object"==typeof exports&&"undefined"!=typeof module?module.exports=l:"function"==typeof define&&define.amd?define(function(){return l}):n&&(this[n]=l)}if(parcelRequire=f,i)throw i;return f}({"QCba":[function(require,module,exports) {
"use strict";var e=this&&this.__awaiter||function(e,t,i,n){return new(i||(i=Promise))(function(o,s){function r(e){try{c(n.next(e))}catch(t){s(t)}}function a(e){try{c(n.throw(e))}catch(t){s(t)}}function c(e){var t;e.done?o(e.value):(t=e.value,t instanceof i?t:new i(function(e){e(t)})).then(r,a)}c((n=n.apply(e,t||[])).next())})},t=this&&this.__rest||function(e,t){var i={};for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&t.indexOf(n)<0&&(i[n]=e[n]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var o=0;for(n=Object.getOwnPropertySymbols(e);o<n.length;o++)t.indexOf(n[o])<0&&Object.prototype.propertyIsEnumerable.call(e,n[o])&&(i[n[o]]=e[n[o]])}return i},i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0});const n=i(require("sharp")),o=require("fs"),s=require("path"),r=require("events"),a=require("crypto"),c=require("@pwa-manifest/potrace"),h=(e,t)=>({filename:Promise.resolve(t),content:Promise.resolve(e)}),p=e=>{try{return new URL(e),!0}catch(t){return!1}};exports.htmlInsertToString=(e=>{let t="<"+e[0];for(const i in e[1])t+=" "+i+'="'+e[1][i]+'"';return t+">"});class l extends r.EventEmitter{constructor(e,{baseURL:i="/",resolveDir:r="."}={},c={}){var h;super(),this.intHashFunction=(e=>a.createHash("md5").update(e).digest("hex")),this.defaultHashMethod="name",this.icons=[],this.generatedFiles={},this.manifest={},this.html=[],i.endsWith("/")||(i+="/"),this.meta={baseURL:i,resolveDir:r};const l=(e,t)=>{for(const i of t){const t=e[i];if(void 0!==t)return t}return c[t[0]]};if("object"!=typeof e){if(void 0===e)throw"No PWA Manifest options found.";throw"The PWA Manifest options must be an object containing the desired parameters."}const f=process.env.NODE_ENV;if(f&&e[f.toLowerCase()]){const i=f.toLowerCase(),n=e[i],o=t(e,["symbol"==typeof i?i:i+""]);if("object"!=typeof n)throw`The specific options for environment "${f}" must be an object containing the desired parameters.`;e=Object.assign(Object.assign({},o),n)}const d=l(e,["disable","disabled"])||!1;if("boolean"!=typeof d)throw"The disable option in the PWA manifest options must be a boolean.";this.disabled=d;const u=l(e,["name","appName","app-name"]);if("string"!=typeof u){if(void 0===u)throw"No name was found in the options.";throw"The name provided in the options must be a string."}this.name=u;const m=l(e,["shortName","short-name","short_name","appShortName","app-short-name"])||u;if("string"!=typeof m)throw"The short name provided in the options must be a string.";this.shortName=m;const g=l(e,["desc","description"])||"";if("string"!=typeof g)throw"The description provided in the options must be a string.";this.desc=g;const b=l(e,["startURL","startUrl","start-url","start_url"])||i;if("string"!=typeof b)throw"The start URL provided in the options must be a string.";this.startURL=b;const y=l(e,["scope"])||i;if("string"!=typeof y)throw"The scope provided in the options must be a string.";this.scope=y;const v=l(e,["themeColor","theme-color","theme_color","theme"])||"white";if("string"!=typeof v)throw"The theme color provided in the options must be a string representing a valid CSS color.";this.theme=v;const w={},T=l(e,["screenshots","screenShots","screen-shots"]);if(T instanceof Array&&T.every(e=>"string"==typeof e)){const e=[];for(let t of T){let n=t.slice(t.lastIndexOf(".")+1);if("jpg"===n)n="jpeg";else if(!["png","jpeg","webp"].includes(n))throw"Each screenshot in the screenshots must be of type PNG, WebP, or JPEG. Ensure that the filenames have the correct extensions.";if(p(t))e.push({src:t,type:"image/"+n});else{if(!o.existsSync(t=s.resolve(r,t)))throw"Every screenshot in the screenshots array must be a valid filepath or absolute URL to a screenshot image.";{const r=o.readFileSync(t),a=this.fingerprint(s.basename(t),r);this.generatedFiles[a]=r,e.push({src:i+a,type:"image/"+n})}}}w.screenshots=e}else if(void 0!==T)throw"The screenshots provided in the options must be an array of screenshot filepaths or absolute URLs.";const I=l(e,["genIcon","gen-icon","iconGen","icon-gen","genIconOpts","gen-icon-opts","iconGenOpts","icon-gen-opts","generateIconOptions","generate-icon-options","iconGenerationOptions","icon-generation-options","icons"]);if("object"!=typeof I){if(void 0===I)throw"No icon generation options found in the PWA manifest options.";throw"The icon generation options in the PWA manifest options must be an object containing the desired parameters."}const P=l(I,["msTileColor","ms-tile-color","microsoftTileColor","microsoft-tile-color"])||v;if("string"!=typeof P)throw"The Microsoft tile color provided in the options must be a string representing the theme color for the application.";this.intBrowserConfig=`<TileColor>${P}</TileColor>`;const O=l(I,["baseIcon","base-icon","fromIcon","from-icon"]);if("string"!=typeof O){if(void 0===O)throw"No base icon was found in the icon generation options.";throw"The base icon parameter in the icon generation options must be a string that contains the path to the icon."}const x=s.basename(O,O.slice(O.lastIndexOf("."))),j=s.resolve(r,O);if(!o.existsSync(j))throw"No icon was found at the base icon path "+O+".";this.intBaseIconName=x;let k=[96,152,192,384,512];const A=l(I,["sizes","sizeList","size-list"]);if(A instanceof Array&&A.every(e=>"number"==typeof e))k=[...new Set(A.concat(192,512))];else if(void 0!==A)throw"The sizes parameter in the icon generation options must be an array of numeric pixel values for sizes of the images.";this.sizes=k;const S={compressionLevel:9};let z={webp:{quality:85,reductionEffort:6},png:S};const C=l(I,["formats","formatList","format-list"]);if(C instanceof Object&&Object.keys(C).every(e=>["png","jpeg","webp","tiff"].includes(e)))z=Object.assign({},C),C.png||(z.png=S);else if(void 0!==C)throw"The formats parameter in the icon generation options must be an object with each key being a supported file type (png, webp, jpeg, or tiff) for the output images, and each value being the options to pass to sharp.";this.formats=z;const _=l(I,["resizeMethod","resize-method","resize"])||"cover";if(!["cover","contain","fill"].includes(_))throw"The resize method parameter in the icon generation options must be one of 'cover', 'contain', or 'fill'.";this.resizeOptions={fit:_,background:"rgba(0, 0, 0, 0)"},this.baseIcon=n.default(j).ensureAlpha();const F=l(I,["purpose","purposes"]);if(void 0!==F&&!(F instanceof Array&&F.every(e=>["badge","maskable","any"].includes(e))))throw"The purposes parameter in the icon generation options must be an array for which each element is one of 'badge', 'maskable', or 'any'.";this.purposes=F||[],this.html.push(["meta",{name:"msapplication-config",content:i+"browserconfig.xml"}]),this.html.push(["meta",{name:"theme-color",content:v}]);const G=l(I,["appleTouchIconBG","appleTouchIconBg","apple-touch-icon-bg","appleTouchIconBackground","apple-touch-icon-background","atib"])||v;if("string"!=typeof G)throw"The Apple Touch Icon background color parameter must be a string representing a valid CSS color.";this.appleTouchIconBG=G;const L=null!=(h=l(I,["appleTouchIconPadding","apple-touch-icon-padding","atip"]))?h:12;if("number"!=typeof L)throw"The Apple Touch Icon padding parameter must be a number of pixels to pad the image with on each side.";this.appleTouchIconPadding=L;const R=l(I,["genFavicons","gen-favicons","generateFavicons","generate-favicons"]);if(!["boolean","undefined"].includes(typeof R))throw"The favicon generation option in the icon generation options must be a boolean.";this.doGenFavicons=R;const M=l(I,["genSafariPinnedTab","gen-safari-pinned-tab","genPinnedTab","gen-pinned-tab","generateSafariPinnedTab","generate-safari-pinned-tab","gpt","gspt"]);if(!["boolean","undefined"].includes(typeof M))throw"The favicon generation option in the icon generation options must be a boolean.";this.doGenPinnedTab=M;const B=l(I,["safariPinnedTabColor","safari-pinned-tab-color","pinnedTabColor","pinned-tab-color","sptc"]);if("string"!=typeof B){if(void 0!==B)throw"The pinned tab color provided in the icon generation options must be a string representing a valid CSS color."}else if(!M)throw"The pinned tab color cannot be specified without enabling pinned tab generation in the icon generation options.";this.pinnedTabColor=B||"white"===v?"black":v;const N=[[["background_color","backgroundColor","background-color","bgColor","bg-color","bg"],"string",v],[["categories","ctgs"],e=>e instanceof Array&&e.every(e=>"string"==typeof e)],[["dir","direction","textDirection","text-direction"],e=>["rtl","ltr","auto"].includes(e)],[["display","displayMode","display-mode"],e=>["standalone","minimal-ui","fullscreen","browser"].includes(e),"standalone"],[["iarc_rating_id","iarc","iarcId","iarcID","iarc-id","iarcRatingId","iarcRatingID","iarc-rating-id","iarcRating","iarc-rating"],"string"],[["lang","language"],"string"],[["orientation","rotated","screenOrientation","screen-orientation"],e=>["any","natural","landscape","landscape-primary","landscape-secondary","portrait","portrait-primary","portrait-secondary"].includes(e)],[["prefer_related_applications","preferRelated","prefer-related","preferRelatedApplications","prefer-related-applications"],"boolean"],[["related_applications","related","relatedApplications","related-applications"],e=>e instanceof Array&&e.every(e=>"object"==typeof e&&"string"==typeof e.platform&&("string"==typeof e.id?void 0===e.url||p(e.url):!!p(e.url)&&void 0===e.id))]];for(const t of N){let i,n;for(const o of t[0])if(void 0!==(i=e[o]))break;if(void 0!==i){if(!(n="string"==typeof t[1]?e=>typeof e===t[1]:t[1])(i))throw'Parameter "'+t[0][0]+'" provided in the options is invalid. Please check the official MDN documentation on the Web App Manifest.';w[t[0][0]]=i}else t[2]&&(w[t[0][0]]=t[2])}const U=l(e,["include","includeParams","include-params"]);if(U instanceof Array&&U.every(e=>"string"==typeof e))for(const t of U)w[t]=e[t];else if(void 0!==U)throw"The include parameter in the options must be an array of extra parameter names to include in the final manifest.";this.extraParams=w}set hashFunction(e){this.intHashFunction=e}get baseIconName(){return this.intBaseIconName}set hashMethod(e){this.defaultHashMethod=e}get browserConfig(){return`<?xml version="1.0" encoding="utf-8"?><browserconfig><msapplication><tile>${this.intBrowserConfig}</tile></msapplication></browserconfig>`}emit(e,...t){return"*"!==e&&super.emit("*",e,...t),super.emit(e,...t)}on(e,t){return super.on(e,t)}fingerprint(e,t,i=this.defaultHashMethod){const n=e.lastIndexOf("."),o=e.slice(0,n),s=e.slice(n+1);return o+"."+("name"===i?this.intHashFunction("_pwa-manifest-"+e).slice(-8)+".":"content"===i?this.intHashFunction(t.toString()).slice(-8)+".":"")+s}generate(){return e(this,void 0,void 0,function*(){return this.disabled?{browserConfig:"",generatedFiles:{},html:[],manifest:{}}:(this.emit("start"),yield this.genDefaultIcons(),this.doGenFavicons&&(yield this.genFavicons()),this.doGenPinnedTab&&(yield this.genSafariPinnedTab()),yield this.genAppleTouchIcon(),yield this.genMsTileIcons(),yield this.genManifest(),this.emit("end"),{browserConfig:this.browserConfig,generatedFiles:this.generatedFiles,html:this.html,manifest:this.manifest})})}genDefaultIcons(){return e(this,void 0,void 0,function*(){let e;this.emit("defaultIconsStart",`Generating icons for ${this.name}...`),this.purposes.length&&(e=this.purposes.join(" "));for(const i of this.sizes){const n=this.baseIcon.clone().resize(i,i,this.resizeOptions),o=i+"x"+i;for(const i of Object.keys(this.formats)){let s;try{s=n.clone()[i](this.formats[i]).toBuffer()}catch(t){throw"An unknown error ocurred during the icon creation process: "+t}const r=this.baseIconName+"-"+o+"."+i,a=h(s,r),c=a.filename;this.emit("defaultIconsGen",a),s=yield a.content;let p=a.filename===c?void 0:yield a.filename;p||(p=this.fingerprint(r,s)),this.generatedFiles[p]=s;const l={src:this.meta.baseURL+p,sizes:o,type:"image/"+i};e&&(l.purpose=e),this.icons.push(l)}}this.emit("defaultIconsEnd")})}genAppleTouchIcon(){return e(this,void 0,void 0,function*(){let e;this.emit("appleTouchIconStart","Generating Apple Touch Icon...");const t=180-2*this.appleTouchIconPadding;try{const i=yield this.baseIcon.clone().resize(t,t,this.resizeOptions).extend({top:this.appleTouchIconPadding,bottom:this.appleTouchIconPadding,left:this.appleTouchIconPadding,right:this.appleTouchIconPadding,background:"rgba(0, 0, 0, 0)"}).toBuffer();e=n.default(i).flatten({background:this.appleTouchIconBG}).png(this.formats.png).toBuffer()}catch(a){throw"An unknown error ocurred during the Apple Touch Icon creation process: "+a}const i="apple-touch-icon.png",o=h(e,i),s=o.filename;this.emit("appleTouchIconGen",o),e=yield o.content;let r=o.filename===s?void 0:yield o.filename;r||(r=this.fingerprint(i,e)),this.generatedFiles[r]=e,this.html.push(["link",{rel:"apple-touch-icon",sizes:"180x180",href:this.meta.baseURL+r}]),this.emit("appleTouchIconEnd")})}genSafariPinnedTab(){return e(this,void 0,void 0,function*(){let e;this.emit("safariPinnedTabStart","Generating Safari Pinned Tab...");try{const{height:t,width:i}=yield this.baseIcon.metadata();e=Buffer.from(c.posterize(yield this.baseIcon.clone().raw().toBuffer(),i,t))}catch(s){throw"An unknown error ocurred during the Safari Pinned Tab creation process: "+s}const t="safari-pinned-tab.svg",i=h(e,t),n=i.filename;this.emit("safariPinnedTabGen",i),e=yield i.content;let o=i.filename===n?void 0:yield i.filename;o||(o=this.fingerprint(t,e)),this.generatedFiles[o]=e,this.html.push(["link",{rel:"mask-icon",href:this.meta.baseURL+o,color:this.pinnedTabColor}]),this.emit("safariPinnedTabEnd")})}genFavicons(){return e(this,void 0,void 0,function*(){this.emit("faviconStart","Generating favicons...");for(const t of[32,16]){let i;try{i=this.baseIcon.clone().resize(t,t,this.resizeOptions).png(this.formats.png).toBuffer()}catch(e){throw"An unknown error ocurred during the favicon creation process: "+e}const n=t+"x"+t,o="favicon-"+n+".png",s=h(i,o),r=s.filename;this.emit("faviconGen",s),i=yield s.content;let a=s.filename===r?void 0:yield s.filename;a||(a=this.fingerprint(o,i)),this.generatedFiles[a]=i,this.html.push(["link",{rel:"icon",sizes:n,href:this.meta.baseURL+a}])}this.emit("faviconEnd")})}genMsTileIcons(){return e(this,void 0,void 0,function*(){this.emit("msTileStart","Generating Microsoft Tile Icons...");for(const s of[70,150,310]){let e;try{e=this.baseIcon.clone().resize(s,s,this.resizeOptions).png(this.formats.png).toBuffer()}catch(o){throw"An unknown error ocurred during the Microsoft Tile Icon creation process: "+o}const t=s+"x"+s,i="mstile-"+t+".png",n=h(e,i),r=n.filename;this.emit("msTileGen",n),e=yield n.content;let a=n.filename===r?void 0:yield n.filename;a||(a=this.fingerprint(i,e)),this.generatedFiles[a]=e,this.intBrowserConfig+=`<square${t}logo src="${this.meta.baseURL+a}"/>`}let e;try{e=this.baseIcon.clone().resize(310,150,this.resizeOptions).png(this.formats.png).toBuffer()}catch(o){throw"An unknown error ocurred during the Microsoft Tile Icon creation process: "+o}const t=h(e,"mstile-310x150.png"),i=t.filename;this.emit("msTileGen",t),e=yield t.content;let n=t.filename===i?void 0:yield t.filename;n||(n=this.fingerprint("mstile-310x150.png",e)),this.generatedFiles[n]=e,this.intBrowserConfig+=`<wide310x150logo src="${this.meta.baseURL+n}"/>`,this.emit("msTileEnd")})}genManifest(){return e(this,void 0,void 0,function*(){this.manifest=Object.assign(Object.assign(Object.assign({name:this.name,short_name:this.shortName,start_url:this.startURL,scope:this.scope},this.desc&&{description:this.desc}),{icons:this.icons,theme_color:this.theme}),this.extraParams),this.html.push(["link",{rel:"manifest",href:this.meta.baseURL+"manifest.webmanifest"}])})}}exports.default=l;
},{}]},{},["QCba"], null)